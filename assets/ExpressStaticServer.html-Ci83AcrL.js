import { _ as _export_sfc, o as openBlock, c as createElementBlock, f as createStaticVNode } from "./app-5wU-U7Lk.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<p>最近，在修改某个课程的小组大作业。</p><p>上周在进行答辩时，老师指出了系统欠缺了一个审核模块，于是，今晚在赶工进行审核模块的开发。</p><p>另外吐槽一句：虽然是小组开发的形式，其实是自己狂奶整个小组罢了，不过也没啥，天将降大任于斯人也。</p><p>由于，项目不用部署在服务器上，而审核模块又得要求管理员能够看见用户上传的图片或者doc文件内容，进而进行文件的驳回操作。</p><p>以上需求，可以通过开启一个静态服务来管理所有文件，或者自己写程序读取整个文件模块，然后通过接口暴露出去。</p><p>但为了方便，显然是开启一个静态服务更为便捷。</p><blockquote><p>说句题外话：</p><p>个人感觉Node后端框架中Express和Koa其实是同一类，可以无痛切换，而Nest则是另一类。</p><p>本着以开发成本最低为选择，果断选择使用Express来作为开发。</p></blockquote><p>说回主题，再开启静态服务后，通过以下代码来指定需要开启静态服务的目录</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&quot;uploads&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定后，通过url访问，这里是http://localhost:3333/uploads/filename.extension</p><p>访问后，会发现页面显示404错误</p><h2 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> 解决办法</h2><ul><li><p>方式一：直接访问当前url+存储静态服务文件夹名</p><ul><li><p>如http://localhost:3333/uploads/1231312.jpg</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>方式二：直接访问当前url+存储的文件，不需要在路径中加文件夹名</p><ul><li><p>如http://localhost:3333/1231312.jpg</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><p>至此，图片就能显示了。也就是说，指定了文件夹，就不需要在路径中加上文件夹名了。</p>', 14);
const _hoisted_15 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_15);
}
const ExpressStaticServer_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "ExpressStaticServer.html.vue"]]);
export {
  ExpressStaticServer_html as default
};
