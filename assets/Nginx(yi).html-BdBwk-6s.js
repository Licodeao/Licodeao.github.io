import { _ as _export_sfc, o as openBlock, c as createElementBlock, f as createStaticVNode } from "./app-5wU-U7Lk.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="初识nginx" tabindex="-1"><a class="header-anchor" href="#初识nginx" aria-hidden="true">#</a> 初识Nginx</h2><h3 id="三个主要应用场景" tabindex="-1"><a class="header-anchor" href="#三个主要应用场景" aria-hidden="true">#</a> 三个主要应用场景</h3><p><img src="https://typora-licodeao.oss-cn-guangzhou.aliyuncs.com/typoraImg/image-20220922183543177.png" alt="image-20220922183543177"></p><h4 id="静态资源服务" tabindex="-1"><a class="header-anchor" href="#静态资源服务" aria-hidden="true">#</a> 静态资源服务</h4><ul><li>通过<strong>本地文件系统</strong>提供服务</li></ul><h4 id="反向代理服务" tabindex="-1"><a class="header-anchor" href="#反向代理服务" aria-hidden="true">#</a> 反向代理服务</h4><ul><li><strong>缓存</strong></li><li><strong>负载均衡</strong></li></ul><h4 id="api服务" tabindex="-1"><a class="header-anchor" href="#api服务" aria-hidden="true">#</a> API服务</h4><ul><li><strong>OpenResty</strong></li></ul><h2 id="nginx的主要优点" tabindex="-1"><a class="header-anchor" href="#nginx的主要优点" aria-hidden="true">#</a> Nginx的主要优点</h2><ul><li><strong>高并发、高性能</strong><ul><li>相较于Apache一个连接对应一个进程而言，Nginx在一定条件下可以达到数千万的并发连接</li></ul></li><li><strong>可扩展性好</strong><ul><li>基于Nginx的模块化设计，使得其第三方生态圈丰富；OpenResty基于Nginx又生成了一套新的生态圈</li></ul></li><li><strong>高可靠性</strong><ul><li>Nginx可以在服务器上不间断地运行数年</li></ul></li><li><strong>热部署</strong><ul><li>在不停止服务的情况下，能够升级Nginx</li></ul></li><li><strong>BSD许可证</strong><ul><li>可以在商业用途中使用Nginx</li></ul></li></ul><h2 id="nginx的组成" tabindex="-1"><a class="header-anchor" href="#nginx的组成" aria-hidden="true">#</a> Nginx的组成</h2><blockquote><p>将Nginx想象成一辆汽车</p></blockquote><ul><li>汽车本身 - <strong>Nginx二进制可执行文件</strong><ul><li>由各模块源码编译出的一个文件</li></ul></li><li>驾驶员 - <strong>Nginx.conf配置文件</strong><ul><li><strong>控制Nginx的行为</strong></li></ul></li><li>轨迹 - <strong>access.log访问日志</strong><ul><li>记录每一条Nginx处理过的http请求信息</li></ul></li><li>黑匣子 - <strong>error.log错误日志</strong><ul><li>定位出现的错误</li></ul></li></ul><h2 id="nginx配置语法" tabindex="-1"><a class="header-anchor" href="#nginx配置语法" aria-hidden="true">#</a> Nginx配置语法</h2><ul><li>配置文件<strong>由指令与指令块构成</strong></li><li>每条指令<strong>以；分号结尾</strong>，<strong>指令与参数间以空格符号分隔</strong></li><li>指令块以 { } 大括号将多条指令组织在一起</li><li><strong>include语句允许组合多个配置文件以提升可维护性</strong></li><li>使用 <strong># 符号添加注释</strong>，提高可读性</li><li>使用 <strong>$ 符号使用变量</strong></li><li>部分指令的参数支持正则表达式</li></ul><h3 id="配置参数" tabindex="-1"><a class="header-anchor" href="#配置参数" aria-hidden="true">#</a> 配置参数</h3><h4 id="时间的单位" tabindex="-1"><a class="header-anchor" href="#时间的单位" aria-hidden="true">#</a> 时间的单位</h4><p>ms(毫秒)、s(秒)、m(秒)、h(小时)、d(天)、w(周)、M(月)、y(年)</p><h4 id="空间的单位" tabindex="-1"><a class="header-anchor" href="#空间的单位" aria-hidden="true">#</a> 空间的单位</h4><ul><li>不加任何单位时，<strong>默认为bytes</strong></li><li>k/K - 千字节</li><li>m/M - 兆字节</li><li>g/G - 千兆字节</li></ul><h3 id="http配置的指令块" tabindex="-1"><a class="header-anchor" href="#http配置的指令块" aria-hidden="true">#</a> http配置的指令块</h3><ul><li>http：由http模块解析指令块内的指令</li><li><strong>server：域名</strong></li><li><strong>upstream</strong>：<strong>与上游服务(tomcat等)进行通讯</strong></li><li><strong>location: url表达式</strong></li></ul><h2 id="nginx命令行" tabindex="-1"><a class="header-anchor" href="#nginx命令行" aria-hidden="true">#</a> Nginx命令行</h2><blockquote><p><strong>格式：nginx 基本指令 指令中的参数</strong></p><p>如nginx -s reload</p></blockquote><ul><li>帮助：-? / -h</li><li>使用指定的配置文件：-c <ul><li>默认情况下，编译出的nginx会去寻找conf中的配置</li></ul></li><li>指定配置指令：-g</li><li>指定运行目录：-p</li><li>发送信号：-s <ul><li><strong>stop</strong>：<strong>立刻停止服务</strong></li><li><strong>quit</strong>：<strong>优雅地停止服务</strong></li><li><strong>reload</strong>：<strong>重载配置文件</strong></li><li><strong>reopen</strong>：<strong>重新开始记录日志文件</strong></li></ul></li><li>测试配置文件是否有语法错误：-t / -T</li><li>打印nginx的版本信息、编译信息等：-v / -V</li></ul><h2 id="如何搭建一个可用的静态资源web服务器" tabindex="-1"><a class="header-anchor" href="#如何搭建一个可用的静态资源web服务器" aria-hidden="true">#</a> 如何搭建一个可用的静态资源Web服务器</h2><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n  <span class="token comment"># 监听端口</span>\n  <span class="token directive"><span class="token keyword">listen</span> <span class="token number">8080</span></span><span class="token punctuation">;</span>\n  <span class="token comment"># 域名</span>\n  <span class="token directive"><span class="token keyword">server_name</span> licodeao.top</span><span class="token punctuation">;</span>\n  <span class="token comment"># 日志文件</span>\n  <span class="token directive"><span class="token keyword">access_log</span> logs/access.log main</span><span class="token punctuation">;</span>\n  <span class="token comment"># url</span>\n  <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n    <span class="token comment"># 这里不使用root，是因为root会将url中的一些路径代入到文件目录中</span>\n    <span class="token directive"><span class="token keyword">alias</span> dlib/</span><span class="token punctuation">;</span>\n    <span class="token comment"># 将文件目录映射到url上(这样就可以在url上访问文件目录中的路径了)</span>\n    <span class="token directive"><span class="token keyword">autoindex</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n    <span class="token comment"># 设置限制访问速率(适用于高并发场景)</span>\n    <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$limit_rate</span> <span class="token number">1k</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 28);
const _hoisted_29 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_29);
}
const Nginx_yi__html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "Nginx(yi).html.vue"]]);
export {
  Nginx_yi__html as default
};
